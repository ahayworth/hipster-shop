version: '2.4'
x-grpc-health:
  &grpc-health
    test: "/bin/grpc_health_probe -addr=:$$PORT"
x-fluentd-log:
  &fluentd-log
    driver: fluentd
    options:
      fluentd-address: localhost:24224

services:
  dozzle:
    image: amir20/dozzle
    ports:
      - 8081:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    ports:
      # OTLP port (modern)
      - "4317:4317"
      # OTLP port (legacy, the collector listens on both)
      - "55680:55680"
      # OTLP over HTTP (URL: http://otel-collector:55681/v1/traces)
      - "55681:55681"
      # Jaeger
      - "6831:6831/udp"
      # health_check extension (TODO: maybe don't publish?)
      - "13133"
      # fluentforward - the collector accepts logs in this format
      # We use it to automatically push container logs into the
      # collector for processing before going to loki.
      - "24224:24224"
      - "9090"
    volumes:
      - ./configs/otel-collector.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    command: --config /config.yaml
    environment:
      REDIS_ADDR: "redis:6379"
    healthcheck:
      test: "curl --fail 'http://localhost:13133'"
    depends_on:
      - tempo
      - loki
      - prometheus

  tempo:
    image: grafana/tempo:latest
    ports:
      - "3100"
      - "55680"
    volumes:
      - ./configs/tempo.yaml:/config.yaml
      - tempo-storage:/var/tempo
    command: -config.file=/config.yaml

  tempo-query:
    image: grafana/tempo-query:latest
    depends_on:
      - tempo
    ports:
      # Jaeger UI, for those who want it
      - "16686:16686"
    volumes:
      - ./configs/tempo-query.yaml:/config.yaml
    command: --grpc-storage-plugin.configuration-file=/config.yaml

  loki:
    image: grafana/loki:latest
    ports:
      - "3100"
    volumes:
      - ./configs/loki.yaml:/config.yaml
      - loki-storage:/loki
    command: -config.file=/config.yaml

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      # TODO: document security implications in the README
      # (not a big deal I just like to be clear when stuff like this is default)
      - "3000:3000"
    volumes:
      - ./configs/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana-storage:/var/lib/grafana
    environment:
      # TODO: document security implications in README
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
    depends_on:
      - tempo
      - tempo-query
      - loki
      - prometheus

## hipster-shop services
  adservice:
    build:
      context: src/adservice
    ports:
      - "9555"
    logging: *fluentd-log
    healthcheck: *grpc-health
    environment:
      PORT: "9555"
      LS_SERVICE_NAME: "adservice"
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "http://otel-collector:55680"
      OTEL_LOG_LEVEL: "error"
      # Necessary for otel-launcher-java, even though we're not using lightstep
      LS_ACCESS_TOKEN: "00000000000000000000000000000000"
    depends_on:
      - otel-collector

  cartservice:
    build:
      context: src/cartservice
    ports:
      - "7070"
    depends_on:
      - redis
      - otel-collector
    logging: *fluentd-log
    # healthcheck: *grpc-health
    environment:
      PORT: "7070"
      LISTEN_ADDR: "0.0.0.0"
      LS_SERVICE_NAME: "cartservice"
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "http://otel-collector:55681/v1/traces"
      OTEL_PROPAGATORS: "tracecontext,baggage,b3multi"
      REDIS_ADDR: "redis://redis:6379"
      GRPC_KIT_LOGLEVEL: "debug"

  checkoutservice:
    build:
      context: src/checkoutservice
    ports:
      - "5050"
    logging: *fluentd-log
    environment:
      PORT: "5050"
      PRODUCT_CATALOG_SERVICE_ADDR: "productcatalogservice:3550"
      SHIPPING_SERVICE_ADDR: "shippingservice:50051"
      PAYMENT_SERVICE_ADDR: "paymentservice:50052"
      EMAIL_SERVICE_ADDR: "emailservice:8080"
      CURRENCY_SERVICE_ADDR: "currencyservice:7000"
      CART_SERVICE_ADDR: "cartservice:7070"
      LS_SERVICE_NAME: "checkoutservice"
      OTEL_EXPORTER_OTLP_SPAN_ENDPOINT: "otel-collector:55680"
      OTEL_EXPORTER_OTLP_SPAN_ENDPOINT_INSECURE: "true"
      OTEL_EXPORTER_OTLP_METRIC_ENDPOINT: "otel-collector:55680"
      OTEL_EXPORTER_OTLP_METRIC_ENDPOINT_INSECURE: "true"
      HIPSTER_SICK: "false"
    healthcheck: *grpc-health
    depends_on:
      - otel-collector

  currencyservice:
    build:
      context: src/currencyservice
    ports:
      - "7000"
    logging: *fluentd-log
    healthcheck: *grpc-health
    environment:
      PORT: "7000"
      LS_SERVICE_NAME: "currencyservice"
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "http://otel-collector:55681/v1/traces"
    depends_on:
      - otel-collector

  emailservice:
    build:
      context: src/emailservice
    ports:
      - "8080"
    logging: *fluentd-log
    healthcheck: *grpc-health
    environment:
      PORT: "8080"
      ENABLE_PROFILER: "1"
      LS_SERVICE_NAME: "emailservice"
      LS_METRICS_ENABLED: "True"
      # Necessary for otel-launcher-python, even though we're not using lightstep
      LS_ACCESS_TOKEN: "00000000000000000000000000000000"
      OTEL_EXPORTER_OTLP_SPAN_ENDPOINT: "otel-collector:4317"
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "otel-collector:4317"
      OTEL_EXPORTER_OTLP_METRIC_ENDPOINT: "otel-collector:4317"
      OTEL_EXPORTER_OTLP_SPAN_INSECURE: "True"
      OTEL_EXPORTER_OTLP_METRIC_INSECURE: "True"
      OTEL_EXPORTER_OTLP_TRACES_INSECURE: "True"
      OTEL_LOG_LEVEL: "debug"
    depends_on:
      - otel-collector

  frontend:
    build:
      context: src/frontend
    ports:
      - "80:8080"
    logging: *fluentd-log
    healthcheck:
      test: "curl --fail --cookie='shop_session-id=x-readiness-probe' 'http://localhost:8080/_healthz'"
    environment:
      PORT: "8080"
      PRODUCT_CATALOG_SERVICE_ADDR: "productcatalogservice:3550"
      CURRENCY_SERVICE_ADDR: "currencyservice:7000"
      CART_SERVICE_ADDR: "cartservice:7070"
      RECOMMENDATION_SERVICE_ADDR: "recommendationservice:8080"
      SHIPPING_SERVICE_ADDR: "shippingservice:50051"
      CHECKOUT_SERVICE_ADDR: "checkoutservice:5050"
      AD_SERVICE_ADDR: "adservice:9555"
      LS_SERVICE_NAME: "frontend"
      OTEL_EXPORTER_OTLP_SPAN_ENDPOINT: "otel-collector:55680"
      OTEL_EXPORTER_OTLP_SPAN_ENDPOINT_INSECURE: "true"
      OTEL_EXPORTER_OTLP_METRIC_ENDPOINT: "otel-collector:55680"
      OTEL_EXPORTER_OTLP_METRIC_ENDPOINT_INSECURE: "true"
    depends_on:
      - otel-collector

  loadgenerator:
    build:
      context: src/loadgenerator
    logging: *fluentd-log
    environment:
      FRONTEND_ADDR: "frontend:8080"
      USERS: 2
    depends_on:
      - otel-collector
      - frontend

  paymentservice:
    build:
      context: src/paymentservice
    ports:
      - "50052"
    logging: *fluentd-log
    healthcheck: *grpc-health
    environment:
      PORT: "50052"
      LS_SERVICE_NAME: "paymentservice"
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "http://otel-collector:55681/v1/traces"
    depends_on:
      - otel-collector

  productcatalogservice:
    build:
      context: src/productcatalogservice
    ports:
      - "3550"
    logging: *fluentd-log
    healthcheck: *grpc-health
    environment:
      PORT: "3550"
      LS_SERVICE_NAME: "productcatalogservice"
      LS_SERVICE_VERSION: "1.0.0"
      OTEL_EXPORTER_OTLP_SPAN_ENDPOINT: "otel-collector:55680"
      OTEL_EXPORTER_OTLP_METRIC_ENDPOINT: "otel-collector:55680"
    depends_on:
      - otel-collector

  recommendationservice:
    build:
      context: src/recommendationservice
    ports:
      - "8080"
    logging: *fluentd-log
    healthcheck: *grpc-health
    environment:
      PORT: "8080"
      PRODUCT_CATALOG_SERVICE_ADDR: "productcatalogservice:3550"
      ENABLE_PROFILER: "1"
      LS_SERVICE_NAME: "recommendationservice"
      LS_METRICS_ENABLED: "True"
      OTEL_EXPORTER_OTLP_SPAN_ENDPOINT: "otel-collector:4317"
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "otel-collector:4317"
      OTEL_EXPORTER_OTLP_METRIC_ENDPOINT: "otel-collector:4317"
      OTEL_EXPORTER_OTLP_SPAN_INSECURE: "True"
      OTEL_EXPORTER_OTLP_METRIC_INSECURE: "True"
      OTEL_EXPORTER_OTLP_TRACES_INSECURE: "True"
      OTEL_LOG_LEVEL: "debug"
      # Necessary for otel-launcher-python, even though we're not using lightstep
      LS_ACCESS_TOKEN: "00000000000000000000000000000000"
    depends_on:
      - otel-collector

  shippingservice:
    build:
      context: src/shippingservice
    ports:
      - "50051"
    logging: *fluentd-log
    healthcheck: *grpc-health
    environment:
      PORT: "50051"
      LS_SERVICE_NAME: "shippingservice"
      OTEL_EXPORTER_OTLP_SPAN_ENDPOINT: "otel-collector:55680"
      OTEL_EXPORTER_OTLP_SPAN_ENDPOINT_INSECURE: "true"
      OTEL_EXPORTER_OTLP_METRIC_ENDPOINT: "otel-collector:55680"
      OTEL_EXPORTER_OTLP_METRIC_ENDPOINT_INSECURE: "true"
    depends_on:
      - otel-collector

  redis:
    image: redis:alpine
    ports:
      - "6379"
    healthcheck:
      test: "redis-cli ping"
      retries: 30
    volumes:
      - redis-data:/data

volumes:
  redis-data: {}
  grafana-storage: {}
  tempo-storage: {}
  loki-storage: {}
